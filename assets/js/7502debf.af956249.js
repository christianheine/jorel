"use strict";(self.webpackChunkjorel_docs=self.webpackChunkjorel_docs||[]).push([[832],{5632:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"basic-usage/tools","title":"Using Tools","description":"Tools allow LLMs to perform actions or retrieve information during conversations. JorEl provides a flexible system for defining and using tools.","source":"@site/docs/basic-usage/tools.md","sourceDirName":"basic-usage","slug":"/basic-usage/tools","permalink":"/jorel/docs/basic-usage/tools","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"learn","previous":{"title":"Working with Documents","permalink":"/jorel/docs/basic-usage/documents"},"next":{"title":"Agents","permalink":"/jorel/docs/category/agents"}}');var s=t(4848),r=t(8453);const a={sidebar_position:5},i="Using Tools",l={},c=[{value:"Quick Start",id:"quick-start",level:2},{value:"Defining Tools",id:"defining-tools",level:2},{value:"Using Zod for Parameters (Recommended)",id:"using-zod-for-parameters-recommended",level:3},{value:"Using JSON Schema",id:"using-json-schema",level:3},{value:"Tool Execution",id:"tool-execution",level:2},{value:"Using Tools in Requests",id:"using-tools-in-requests",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Controlling Tool Usage",id:"controlling-tool-usage",level:3},{value:"Multiple Tools",id:"multiple-tools",level:3},{value:"Tool Approval",id:"tool-approval",level:2},{value:"Streaming with Tools",id:"streaming-with-tools",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Tool Context",id:"tool-context",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Retry Configuration",id:"retry-configuration",level:3},{value:"Working with Agents",id:"working-with-agents",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"using-tools",children:"Using Tools"})}),"\n",(0,s.jsx)(n.p,{children:"Tools allow LLMs to perform actions or retrieve information during conversations. JorEl provides a flexible system for defining and using tools."}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.p,{children:"Here's a basic example of using a tool with JorEl:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { JorEl } from \'jorel\';\nimport { z } from \'zod\';\n\nconst jorEl = new JorEl({\n  openAI: true, // Will use OPENAI_API_KEY environment variable\n});\n\n// Define and use a tool\nconst response = await jorEl.ask("What\'s the weather in Sydney?", {\n  tools: [{\n    name: "get_weather",\n    description: "Get the current weather for a city",\n    executor: async ({ city }) => {\n      // Simulate weather API call\n      return { temperature: 22, conditions: "sunny" };\n    },\n    params: z.object({\n      city: z.string(),\n    }),\n  }]\n});\n\nconsole.log(response);\n// The current weather in Sydney is 22\xb0C and it\'s sunny.\n'})}),"\n",(0,s.jsx)(n.h2,{id:"defining-tools",children:"Defining Tools"}),"\n",(0,s.jsx)(n.p,{children:"A tool consists of several key components:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface LlmToolConfiguration {\n  name: string;                    // Unique identifier for the tool\n  description: string;             // Description of what the tool does\n  executor?: LlmToolExecutor;      // Function that executes the tool\n  params?: ZodObject | JsonSchema; // Parameters the tool accepts\n  requiresConfirmation?: boolean;  // Whether tool calls need approval\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"using-zod-for-parameters-recommended",children:"Using Zod for Parameters (Recommended)"}),"\n",(0,s.jsx)(n.p,{children:"The recommended way to define tool parameters is using Zod schemas. This provides type safety and automatic JSON Schema generation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { z } from \'zod\';\n\nconst weatherTool = {\n  name: "get_weather",\n  description: "Get weather information for a location",\n  executor: getWeather,\n  params: z.object({\n    city: z.string(),\n    units: z.enum(["celsius", "fahrenheit"]).optional(),\n  }),\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"using-json-schema",children:"Using JSON Schema"}),"\n",(0,s.jsx)(n.p,{children:"You can also define parameters using raw JSON Schema:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const weatherTool = {\n  name: "get_weather",\n  description: "Get weather information for a location",\n  executor: getWeather,\n  params: {\n    type: "object",\n    properties: {\n      city: { type: "string" },\n      units: { type: "string", enum: ["celsius", "fahrenheit"] },\n    },\n    required: ["city"],\n  },\n};\n'})}),"\n",(0,s.jsx)(n.h2,{id:"tool-execution",children:"Tool Execution"}),"\n",(0,s.jsx)(n.p,{children:"The executor function receives the parsed arguments and optional context:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'type LlmToolExecutor = (\n  args: object,                           // Parsed arguments\n  context?: Record<string, any>,         // Optional context (visible in logs)\n  secureContext?: Record<string, any>    // Secure context (not logged)\n) => Promise<object>;\n\nconst weatherTool = {\n  name: "get_weather",\n  executor: async (args, context, secureContext) => {\n    const { city } = args;\n    const apiKey = secureContext?.apiKey;\n    // Make API call...\n    return { temperature, conditions };\n  },\n};\n'})}),"\n",(0,s.jsx)(n.h2,{id:"using-tools-in-requests",children:"Using Tools in Requests"}),"\n",(0,s.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const response = await jorEl.ask("What\'s the weather like?", {\n  tools: [weatherTool],\n  context: { defaultCity: "Sydney" },     // Available to tools\n  secureContext: { apiKey: "secret" },    // Available but not logged\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"controlling-tool-usage",children:"Controlling Tool Usage"}),"\n",(0,s.jsxs)(n.p,{children:["You can control how tools are used with ",(0,s.jsx)(n.code,{children:"toolChoice"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const response = await jorEl.ask("What\'s the weather?", {\n  tools: [weatherTool],\n  toolChoice: "auto",      // Let the LLM decide (default)\n  // toolChoice: "none",   // Disable tools\n  // toolChoice: "required" // Force tool usage\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"multiple-tools",children:"Multiple Tools"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const response = await jorEl.ask("What\'s the weather and stock price?", {\n  tools: [{\n    name: "get_weather",\n    description: "Get weather data",\n    executor: getWeather,\n    params: weatherSchema,\n  }, {\n    name: "get_stock_price",\n    description: "Get current stock price",\n    executor: getStockPrice,\n    params: stockSchema,\n  }],\n});\n'})}),"\n",(0,s.jsx)(n.h2,{id:"tool-approval",children:"Tool Approval"}),"\n",(0,s.jsx)(n.p,{children:"You can require approval before tools are executed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const response = await jorEl.ask("Transfer $100 to Bob", {\n  tools: [{\n    name: "transfer_money",\n    description: "Transfer money between accounts",\n    executor: transferMoney,\n    params: transferSchema,\n    requiresConfirmation: true,  // Requires approval\n  }],\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Note that this is only supported with using agents. See the ",(0,s.jsx)(n.a,{href:"/jorel/docs/agents/intro",children:"Agents section"})," for more information."]}),"\n",(0,s.jsx)(n.h2,{id:"streaming-with-tools",children:"Streaming with Tools"}),"\n",(0,s.jsx)(n.p,{children:"Tools work seamlessly with streaming responses:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const stream = jorEl.stream("What\'s the weather in Sydney and Melbourne?", {\n  tools: [{\n    name: "get_weather",\n    description: "Get weather data",\n    executor: getWeather,\n    params: weatherSchema,\n  }],\n});\n\nfor await (const chunk of stream) {\n  process.stdout.write(chunk);\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,s.jsx)(n.h3,{id:"tool-context",children:"Tool Context"}),"\n",(0,s.jsx)(n.p,{children:"You can pass context to tools that isn't visible to the LLM:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const response = await jorEl.ask("What\'s the weather?", {\n  tools: [weatherTool],\n  context: {\n    userId: "123",\n    preferences: { units: "celsius" },\n  },\n  secureContext: {\n    apiKey: process.env.WEATHER_API_KEY,\n  },\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.p,{children:"Tools can throw errors which are handled gracefully:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const weatherTool = {\n  name: "get_weather",\n  executor: async ({ city }) => {\n    if (!isValidCity(city)) {\n      throw new Error(`Invalid city: ${city}`);\n    }\n    return await getWeather(city);\n  },\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"retry-configuration",children:"Retry Configuration"}),"\n",(0,s.jsx)(n.p,{children:"You can control how many times a tool can be attempted:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const response = await jorEl.ask("What\'s the weather?", {\n  tools: [weatherTool],\n  maxAttempts: 3,  // Maximum attempts per tool call\n});\n'})}),"\n",(0,s.jsx)(n.h2,{id:"working-with-agents",children:"Working with Agents"}),"\n",(0,s.jsxs)(n.p,{children:["Tools are particularly powerful when used with JorEl's agent system. See the ",(0,s.jsx)(n.a,{href:"/jorel/docs/agents/intro",children:"Agents section"})," for more details on how to use tools with agents."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const s={},r=o.createContext(s);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);